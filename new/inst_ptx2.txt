
Fatbin elf code:
================
arch = sm_30
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin elf code:
================
arch = sm_30
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_30
code version = [6,4]
producer = <unknown>
host = linux
compile_size = 64bit
compressed








.version 6.4
.target sm_30
.address_size 64


.extern .func (.param .b32 func_retval0) vprintf
(
.param .b64 vprintf_param_0,
.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 $str[4] = {37, 100, 32, 0};

.visible .entry _Z18vecMulMatrixKernelPfS_S_S_i(
.param .u64 _Z18vecMulMatrixKernelPfS_S_S_i_param_0,
.param .u64 _Z18vecMulMatrixKernelPfS_S_S_i_param_1,
.param .u64 _Z18vecMulMatrixKernelPfS_S_S_i_param_2,
.param .u64 _Z18vecMulMatrixKernelPfS_S_S_i_param_3,
.param .u32 _Z18vecMulMatrixKernelPfS_S_S_i_param_4
)
{
.local .align 8 .b8 __local_depot0[8];
.reg .b64 %SP;
.reg .b64 %SPL;
.reg .pred %p<11>;
.reg .f32 %f<37>;
.reg .b32 %r<53>;
.reg .b64 %rd<30>;


mov.u64 %SPL, __local_depot0;
cvta.local.u64 %SP, %SPL;
ld.param.u64 %rd3, [_Z18vecMulMatrixKernelPfS_S_S_i_param_0];
ld.param.u64 %rd5, [_Z18vecMulMatrixKernelPfS_S_S_i_param_1];
ld.param.u64 %rd4, [_Z18vecMulMatrixKernelPfS_S_S_i_param_2];
ld.param.u32 %r18, [_Z18vecMulMatrixKernelPfS_S_S_i_param_4];
cvta.to.global.u64 %rd1, %rd5;
add.u64 %rd6, %SP, 0;
add.u64 %rd7, %SPL, 0;
mov.u32 %r19, %ctaid.x;
mov.u32 %r20, %ntid.x;
mov.u32 %r21, %tid.x;
mad.lo.s32 %r1, %r19, %r20, %r21;
mov.u32 %r22, %ctaid.y;
mov.u32 %r23, %ntid.y;
mov.u32 %r24, %tid.y;
mad.lo.s32 %r2, %r22, %r23, %r24;
st.local.u32 [%rd7], %r20;
mov.u64 %rd8, $str;
cvta.global.u64 %rd9, %rd8;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd9;
.param .b64 param1;
st.param.b64	[param1+0], %rd6;
.param .b32 retval0;
call.uni (retval0), 
vprintf, 
(
param0, 
param1
);
ld.param.b32	%r25, [retval0+0];


	}
	setp.ge.s32	%p1, %r2, %r18;
setp.ge.s32	%p2, %r1, %r18;
or.pred %p3, %p1, %p2;
@%p3 bra BB0_17;

mov.f32 %f1, 0f00000000;
setp.lt.s32	%p4, %r18, 1;
@%p4 bra BB0_16;

mul.wide.s32 %rd10, %r1, 4;
add.s64 %rd2, %rd1, %rd10;
mul.lo.s32 %r3, %r2, %r18;
mov.f32 %f16, 0f00000000;
mov.u32 %r26, 0;
cvta.to.global.u64 %rd11, %rd3;
mov.u32 %r47, %r26;
mov.f32 %f1, %f16;

BB0_3:
add.s32 %r31, %r47, %r3;
mul.wide.s32 %rd12, %r31, 4;
add.s64 %rd13, %rd11, %rd12;
ld.global.f32 %f2, [%rd13];
and.b32 %r30, %r18, 3;
setp.eq.s32	%p5, %r30, 0;
@%p5 bra BB0_4;

setp.eq.s32	%p6, %r30, 1;
@%p6 bra BB0_6;
bra.uni BB0_7;

BB0_6:
mov.u32 %r49, %r26;
bra.uni BB0_11;

BB0_4:
mov.u32 %r52, %r26;
mov.f32 %f35, %f16;
bra.uni BB0_12;

BB0_7:
setp.eq.s32	%p7, %r30, 2;
@%p7 bra BB0_8;
bra.uni BB0_9;

BB0_8:
mov.u32 %r48, %r26;
bra.uni BB0_10;

BB0_9:
ld.global.f32 %f18, [%rd2];
fma.rn.f32 %f1, %f2, %f18, %f1;
mov.u32 %r48, 1;

BB0_10:
neg.s32 %r33, %r48;
and.b32 %r34, %r33, %r18;
add.s32 %r35, %r34, %r1;
mul.wide.s32 %rd14, %r35, 4;
add.s64 %rd15, %rd1, %rd14;
ld.global.f32 %f19, [%rd15];
fma.rn.f32 %f1, %f2, %f19, %f1;
add.s32 %r49, %r48, 1;

BB0_11:
mad.lo.s32 %r36, %r49, %r18, %r1;
mul.wide.s32 %rd16, %r36, 4;
add.s64 %rd17, %rd1, %rd16;
ld.global.f32 %f20, [%rd17];
fma.rn.f32 %f1, %f2, %f20, %f1;
add.s32 %r52, %r49, 1;
mov.f32 %f35, %f1;

BB0_12:
setp.lt.u32	%p8, %r18, 4;
@%p8 bra BB0_15;

mad.lo.s32 %r51, %r18, %r52, %r1;
shl.b32 %r11, %r18, 2;
mov.f32 %f35, %f1;

BB0_14:
mul.wide.s32 %rd18, %r51, 4;
add.s64 %rd19, %rd1, %rd18;
ld.global.f32 %f21, [%rd19];
fma.rn.f32 %f22, %f2, %f21, %f35;
cvt.s64.s32	%rd20, %r11;
add.s64 %rd21, %rd19, %rd20;
ld.global.f32 %f23, [%rd21];
fma.rn.f32 %f24, %f2, %f23, %f22;
add.s64 %rd22, %rd21, %rd20;
ld.global.f32 %f25, [%rd22];
fma.rn.f32 %f26, %f2, %f25, %f24;
add.s64 %rd23, %rd22, %rd20;
ld.global.f32 %f27, [%rd23];
fma.rn.f32 %f35, %f2, %f27, %f26;
add.s32 %r51, %r51, %r11;
add.s32 %r52, %r52, 4;
setp.lt.s32	%p9, %r52, %r18;
@%p9 bra BB0_14;

BB0_15:
mad.lo.s32 %r41, %r47, %r18, %r1;
cvta.to.global.u64 %rd24, %rd4;
mul.wide.s32 %rd25, %r41, 4;
add.s64 %rd26, %rd24, %rd25;
ld.global.f32 %f28, [%rd26];
fma.rn.f32 %f1, %f2, %f28, %f35;
add.s32 %r47, %r47, 1;
setp.lt.s32	%p10, %r47, %r18;
@%p10 bra BB0_3;

BB0_16:
mad.lo.s32 %r46, %r2, %r18, %r1;
cvta.to.global.u64 %rd27, %rd4;
mul.wide.s32 %rd28, %r46, 4;
add.s64 %rd29, %rd27, %rd28;
st.global.f32 [%rd29], %f1;

BB0_17:
ret;
}


